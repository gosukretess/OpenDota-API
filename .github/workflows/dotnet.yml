name: .NET Linux

on:
  push:
    branches: [ main ]
    tags:
       - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: [ main ]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build-library:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            3.1.x
            5.0.x
            6.0.x
            7.0.x
      - name: Display .NET version
        run: dotnet --version

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build OpenDotaApi.sln --configuration Release --no-restore

      - name: Run unit tests
        run: dotnet test --configuration Release --collect:"XPlat Code Coverage" --settings ./OpenDotaApi.Test/test.settings.xml

      - name: Copy coverage results
        run: cp ./OpenDotaApi.Test/TestResults/**/*.xml ./OpenDotaApi.Test/TestResults/

      - name: Upload code coverage\
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          files: ./OpenDotaApi.Test/TestResults/coverage.opencover.xml
          fail_ci_if_error: true
          
      - name: Checkout
        uses: actions/checkout@v2
        with:
         fetch-depth: 0
      - name: Verify commit exists in origin/main
        run: git branch --remote --contains | grep origin/main
      - name: Extract release notes
        run: |
            git log --pretty=format:'%d %s' ${GITHUB_REF} | perl -pe 's| \(.*tag: v(\d+.\d+.\d+(-preview\d{3})?)(, .*?)*\)|\n## \1\n|g' > RELEASE-NOTES
      - name: Set VERSION variable from tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      - name: Build
        run: dotnet build --configuration Release /p:Version=${VERSION}
      - name: Pack
        run: dotnet pack --configuration Release /p:Version=${VERSION} --no-build --output .
      - name: Push
        run: dotnet nuget push OpenDotaApi.${VERSION}.nupkg -k ${{ secrets.NUGET_ORG_API_KEY }}  -s https://api.nuget.org/v3/index.json
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
